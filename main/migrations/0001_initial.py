# Generated by Django 5.2.5 on 2025-08-30 09:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DisasterType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='⚠️', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('organization', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('contact_type', models.CharField(choices=[('fire', 'Fire Department'), ('police', 'Police'), ('medical', 'Medical Emergency'), ('disaster', 'Disaster Management'), ('school', 'School Administration'), ('local', 'Local Authority')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['contact_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DrillChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('disaster_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drill_checklists', to='main.disastertype')),
            ],
        ),
        migrations.CreateModel(
            name='DrillCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_steps', models.PositiveIntegerField(default=0)),
                ('total_steps', models.PositiveIntegerField()),
                ('completion_percentage', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('time_taken', models.PositiveIntegerField(help_text='Time taken in seconds')),
                ('drill_checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.drillchecklist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-completed_at'],
            },
        ),
        migrations.CreateModel(
            name='EducationModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('estimated_read_time', models.PositiveIntegerField(default=5, help_text='Estimated reading time in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disaster_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='main.disastertype')),
            ],
            options={
                'ordering': ['disaster_type', 'order'],
                'unique_together': {('disaster_type', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('disaster_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='main.disastertype')),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_questions', models.PositiveIntegerField()),
                ('correct_answers', models.PositiveIntegerField()),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('time_taken', models.PositiveIntegerField(help_text='Time taken in seconds')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-completed_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('admin', 'Administrator')], default='student', max_length=20)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('grade_level', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DrillStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_text', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_critical', models.BooleanField(default=False, help_text='Mark as critical step')),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='Time limit in seconds', null=True)),
                ('drill_checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='main.drillchecklist')),
            ],
            options={
                'ordering': ['drill_checklist', 'order'],
                'unique_together': {('drill_checklist', 'order')},
            },
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.PositiveIntegerField(default=0, help_text='Time spent in seconds')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.educationmodule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'module')},
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('option_a', models.CharField(max_length=200)),
                ('option_b', models.CharField(max_length=200)),
                ('option_c', models.CharField(max_length=200)),
                ('option_d', models.CharField(max_length=200)),
                ('correct_answer', models.CharField(choices=[('A', 'Option A'), ('B', 'Option B'), ('C', 'Option C'), ('D', 'Option D')], max_length=1)),
                ('explanation', models.TextField(blank=True, help_text='Explanation for the correct answer')),
                ('order', models.PositiveIntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='main.quiz')),
            ],
            options={
                'ordering': ['quiz', 'order'],
                'unique_together': {('quiz', 'order')},
            },
        ),
    ]
